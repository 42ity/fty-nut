<project
    name = "fty-nut"
    description = "NUT (Network UPS Tools) daemon wrapper/proxy"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-nut"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" />
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image-ipm_1.3 &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <option name = "build_docs" value = "1" />
    </target>

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />


    <use project = "czmq"
        repository="https://github.com/42ity/czmq.git" release = "release/IPM_Infra-1.3"
        min_major = "3" min_minor = "0" min_patch = "2" >
        <use project = "libzmq"
            repository="https://github.com/42ity/libzmq.git" release = "release/IPM_Infra-1.3" >
            <use project = "libsodium" prefix = "sodium"
                repository = "https://github.com/42ity/libsodium.git"
                release = "release/IPM_Infra-1.3"
                test = "sodium_init" />
        </use>
    </use>

    <use project = "malamute" min_major = "1" test = "mlm_server_test"
        repository="https://github.com/42ity/malamute.git"
        release = "release/IPM_Infra-1.3" />

    <use project = "fty-proto" libname = "libfty_proto" header="ftyproto.h" prefix="fty_proto"
        min_major = "1" min_minor = "0" min_patch = "0"
        repository = "https://github.com/42ity/fty-proto.git"
        release = "release/IPM_Infra-1.3"
        test = "fty_proto_test" >
        <use project = "malamute" />
    </use>

    <use project = "cidr" test = "cidr_alloc" header="libcidr.h"
        debian_name = "libcidr0-dev" redhat_name = "libcidr-devel"
        repository = "https://github.com/42ity/libcidr.git"
        release = "release/IPM_Infra-1.3" />

    <use project = "cxxtools" test="cxxtools::Utf8Codec::Utf8Codec" header="cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git"
        release = "release/IPM_Infra-1.3" />

    <!-- Note: From NUT we really only need up-to-date libraries that
         we use in our project to link against during Travis CI tests.
         Of course, settings are different for an image build.
      -->
    <use project = "libnutclient" test = "nut::TcpClient::TcpClient" header="nutclient.h"
        prefix="nutclient" redhat_name = "nut-devel"
        repository = "https://github.com/42ity/nut.git"
        release = "release/IPM_Infra-1.3" >
            <add_config_opts>--with-doc=no</add_config_opts>
            <add_config_opts>--with-all=no</add_config_opts>
            <add_config_opts>--with-dev=yes</add_config_opts>
            <add_config_opts>--with-dmfnutscan-regenerate=no</add_config_opts>
            <add_config_opts>--with-dmfsnmp-regenerate=no</add_config_opts>
    </use>

    <class name = "logger"          private = "1">logging api</class>
    <class name = "fsutils"         private = "1">filesystem utils</class>
    <class name = "cidr"            private = "1">C++ Wrapper around libcidr</class>
    <class name = "nutscan"         private = "1">Wrapper around nut-scanner tool</class>
    <class name = "subprocess"      private = "1">C++ Wrapper around cxxtools::Fork</class>

    <class name = "actor commands"      private = "1">actor commands</class>
    <class name = "ups status"          private = "1">ups status converting functions</class>
    <class name = "nut device"          private = "1">classes for communicating with NUT daemon</class>
    <class name = "nut agent"           private = "1">NUT daemon wrapper - logic of what is being done with data from NUT daemon</class>
    <class name = "nut configurator"    private = "1">NUT configurator class</class>
    <class name = "alert device"        private = "1">device producing alerts</class>
    <class name = "alert device list"   private = "1">collection of alerts</class>
    <class name = "nut"                 private = "1">agent nut structure</class>
    <class name = "stream"              private = "1">stream deliver command</class>
    <class name = "sensor device"       private = "1">sensor attached to UPS</class>
    <class name = "sensor list"         private = "1">list of sensor attached to UPSes</class>

    <class name = "fty-nut-server" state = "stable">fty nut actor</class>
    <class name = "fty-nut-configurator-server" state = "stable">fty nut configurator actor</class>
    <class name = "alert actor" state = "stable">actor handling device alerts and thresholds</class>
    <class name = "sensor actor" state = "stable">actor handling sensors attached to UPS/ePDU</class>

    <main name = "fty-nut" service = "1" />
    <main name = "fty-nut-configurator" service = "1" />
    <bin name = "fty-nutconfig" />
    <bin name = "fty-dmf" />

<!--
TODO: Handle (automate) delivery of .in templates (and configure.ac translation) for:
                 src/mapping.conf
                 src/fty-nut.conf
                 src/fty_10_agent-nut
-->

</project>
