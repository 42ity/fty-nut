<project
    name = "fty-nut"
    description = "NUT (Network UPS Tools) daemon wrapper/proxy"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    repository = "https://github.com/42ity/fty-nut"
    license = "GPL-2.0+"
    >

    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <!--
        Current libtool ABI version of your project's shared library.
        Start at 0:0:0 and see:
        http://www.gnu.org/software/libtool/manual/html_node/Updating-version-info.html
        for details on how/when to increment it.
        If not defined 0:0:0 will be used.
    -->
    <abi current = "1" revision = "0" age = "0" />

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" />

    <!-- Note that if pkg-config version attrs are specified,
        then the "test" is not used by current zproject. -->
<!--
    <use project = "czmq" release = "v3.0.2" test = "zctx_test"
        repository="https://github.com/42ity/czmq.git"
        min_major = "3" min_minor = "0" min_patch = "2"
        next_incompatible_version = "4" />
    <use project = "czmq" />
-->
    <use project = "czmq" min_major = "3" min_minor = "0" min_patch = "2" />
    <use project = "malamute" min_major = "1"/>
    <use project = "fty-proto" libname = "libfty_proto" prefix="ftyproto"
        min_major = "0" min_minor = "0" min_patch = "0"
        repository = "https://github.com/42ity/fty-proto"
        test = "fty_proto_test">
        <use project = "malamute" />
    </use>

    <use project = "cidr" test = "cidr_alloc" header="libcidr.h"
        debian_name = "libcidr0-dev" redhat_name = "libcidr-devel"
        repository = "https://github.com/42ity/libcidr"/>

    <use project = "cxxtools" test="cxxtools::Utf8Codec::Utf8Codec" header="cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools"
        release = "42ity"/>

    <!-- Note: From NUT we really only need up-to-date libraries that
         we use in our project to link against during Travis CI tests.
         Of course, settings are different for an image build.
      -->
    <use project = "libnutclient" test = "nut::TcpClient::TcpClient" header="nutclient.h"
        prefix="nutclient" redhat_name = "nut-devel"
        repository = "https://github.com/42ity/nut" release = "FTY">
            <add_config_opts>--with-doc=no</add_config_opts>
            <add_config_opts>--with-all=no</add_config_opts>
            <add_config_opts>--with-dev=yes</add_config_opts>
            <add_config_opts>--with-dmfnutscan-regenerate=no</add_config_opts>
            <add_config_opts>--with-dmfsnmp-regenerate=no</add_config_opts>
    </use>

    <class name = "logger"          private = "1">logging api</class>
    <class name = "fsutils"         private = "1">filesystem utils</class>
    <class name = "cidr"            private = "1">C++ Wrapper around libcidr</class>
    <class name = "nutscan"         private = "1">Wrapper around nut-scanner tool</class>
    <class name = "subprocess"      private = "1">C++ Wrapper around cxxtools::Fork</class>

    <class name = "actor commands"      private = "1">actor commands</class>
    <class name = "ups status"          private = "1">ups status converting functions</class>
    <class name = "nut device"          private = "1">classes for communicating with NUT daemon</class>
    <class name = "nut agent"           private = "1">NUT daemon wrapper - logic of what is being done with data from NUT daemon</class>
    <class name = "nut configurator"    private = "1">NUT configurator class</class>
    <class name = "alert device"        private = "1">device producing alerts</class>
    <class name = "alert device list"   private = "1">collection of alerts</class>
    <class name = "nut"                 private = "1">agent nut structure</class>
    <class name = "stream"              private = "1">stream deliver command</class>
    <class name = "sensor device"       private = "1">sensor attached to UPS</class>
    <class name = "sensor list"         private = "1">list of sensor attached to UPSes</class>

    <class name = "fty-nut-server" state = "stable">fty nut actor</class>
    <class name = "fty-nut-configurator-server" state = "stable">fty nut configurator actor</class>
    <class name = "alert actor" state = "stable">actor handling device alerts and thresholds</class>
    <class name = "sensor actor" state = "stable">actor handling sensors attached to UPS/ePDU</class>

    <main name = "fty-nut" service = "1" />
    <main name = "fty-nut-configurator" service = "1" />
    <bin name = "fty-nutconfig" />
    <bin name = "fty-dmf" />

<!--
TODO: Handle (automate) delivery of .in templates (and configure.ac translation) for:
                 src/mapping.conf
                 src/fty-nut.conf
                 src/fty_10_agent-nut
-->

</project>

