<project
    name = "fty-nut"
    description = "NUT (Network UPS Tools) daemon wrapper/proxy"
    script = "zproject.gsl"
    email = "EatonIPCOpenSource@eaton.com"
    url = "https://42ity.org"
    license = "GPL-2.0+"
    repository = "https://github.com/42ity/fty-nut"
    >

    <target name = "debian" />
    <target name = "redhat" />
    <target name = "travis" >
        <option name = "recursive_dependencies" value = "true"/>
        <option name = "dist" value = "trusty" />
        <option name = "shadow_gcc" value = "2" />
        <!-- option name = "clangformat_implem" value = "autotools" / -->
        <option name = "use_cmake" value = "0" />
        <!-- option name = "clangformat_require_good" value = "1" / -->
        <option name = "clangformat_allow_failures" value = "1" />
        <option name = "use_pkg_deps_prereqs_source" value = "0" />
        <option name = "require_gitignore" value = "1" />
    </target>
    <target name = "jenkins" >
        <option name = "agent_label" value = "devel-image &amp;&amp; x86_64" />
        <option name = "triggers_pollSCM" value = "H/2 * * * *" />
        <option name = "test_cppcheck" value = "1" />
        <!-- Some issue with mapping.conf redistribution -->
        <option name = "test_check" value = "0" />
        <option name = "test_distcheck" value = "0" />
        <option name = "test_memcheck" value = "0" />
        <option name = "build_docs" value = "1" />
        <option name = "dist_docs" value = "1" />

        <!-- Try to avoid avalanche rebuilds of same code on our CI -->
        <option name = "use_earlymilestone" value = "1" />
        <option name = "use_deploymilestone" value = "1" />
        <option name = "use_build_nonconcurrent" value = "1" />
        <option name = "use_checkout_explicit" value = "1" />
    </target>

    <classfilename use-cxx-gcc-4-9 = "true" />
    <include filename = "license.xml" />
    <version major = "1" minor = "0" patch = "0" />
    <abi current = "1" revision = "0" age = "0" />

    <use project = "cxxtools"
        test = "cxxtools::Utf8Codec::Utf8Codec"
        header = "cxxtools/allocator.h"
        repository = "https://github.com/42ity/cxxtools.git" />

    <use project = "cidr"
        libname = "libcidr"
        test = "cidr_alloc"
        header = "libcidr.h"
        debian_name = "libcidr0-dev"
        redhat_name = "libcidr-devel"
        repository = "https://github.com/42ity/libcidr.git" />

    <!-- Note: From NUT we really only need up-to-date libraries that
         we use in our project to link against during Travis CI tests.
         Of course, settings are different for an image build.
      -->
    <use project = "libnutclient" test = "nut::TcpClient::TcpClient" header = "nutclient.h"
        prefix = "nutclient" redhat_name = "nut-devel"
        repository = "https://github.com/42ity/nut.git" >
            <add_config_opts>--with-doc=no</add_config_opts>
            <add_config_opts>--with-all=no</add_config_opts>
            <add_config_opts>--with-dev=yes</add_config_opts>
            <add_config_opts>--with-dmfnutscan-regenerate=no</add_config_opts>
            <add_config_opts>--with-dmfsnmp-regenerate=no</add_config_opts>
    </use>

    <!-- Note: pure C projects should use fty-log/fty_logger.h, C++ use fty_log.h -->
    <use project = "fty-common-logging" libname = "libfty_common_logging"
        header = "fty_log.h"
        repository = "https://github.com/42ity/fty-common-logging.git"
        test = "fty_common_logging_selftest" />

    <use project = "fty-common" libname = "libfty_common" header = "fty_common.h"
        repository = "https://github.com/42ity/fty-common.git"
        test = "fty_common_selftest" />

    <use project = "fty-common-mlm" libname = "libfty_common_mlm" header = "fty_common_mlm.h"
        repository = "https://github.com/42ity/fty-common-mlm.git"
        test = "fty_common_mlm_selftest"/>

    <!-- TODO: Move into fty-common-db? Or is this dependency used directly? -->
    <use project = "tntdb"
        test = "tntdb::connectCached"
        repository = "https://github.com/42ity/tntdb.git"
        builddir = "tntdb" />

    <use project = "fty-proto" libname = "libfty_proto" header = "ftyproto.h" prefix = "fty_proto"
        min_major = "1" min_minor = "0" min_patch = "0"
        repository = "https://github.com/42ity/fty-proto.git"
        test = "fty_proto_test" />

    <use project = "fty-common-db" libname = "libfty_common_db" header = "fty_common_db.h"
        repository = "https://github.com/42ity/fty-common-db.git"
        test = "fty_common_db_selftest" />

    <use project = "fty-common-nut" libname = "libfty_common_nut" header = "fty_common_nut.h"
            repository = "https://github.com/42ity/fty-common-nut.git"
            test = "fty_common_nut_selftest" />
    
    <use project = "fty-common-socket" libname = "libfty_common_socket" header = "fty_common_socket.h"
            repository = "https://github.com/42ity/fty-common-socket.git"
            test = "fty_common_socket_selftest" />

    <use project = "fty_shm" libname = "libfty_shm" header="fty_shm.h"
        min_major = "1"
        test = "fty_shm_test"
        repository = "https://github.com/42ity/fty-shm.git">

        <!-- Travis CI unit-tests of current project do not require
             gcc-4.9 to be installed in the building VM just for
             this unpackaged dependency to build: -->
        <add_config_opts>--enable-gcc-std-regex=no</add_config_opts>
    </use>

    <header name = "nut_mlm" private = "1">Malamute connection helpers</header>
    <class name = "cidr"            private = "1">C++ Wrapper around libcidr</class>

    <class name = "actor commands"      private = "1">actor commands</class>
    <class name = "ups status"          private = "1">ups status converting functions</class>
    <class name = "nut device"          private = "1">classes for communicating with NUT daemon</class>
    <class name = "nut agent"           private = "1">NUT daemon wrapper - logic of what is being done with data from NUT daemon</class>
    <class name = "nut configurator"    private = "1">NUT configurator class</class>
    <class name = "alert device"        private = "1">device producing alerts</class>
    <class name = "alert device list"   private = "1">collection of alerts</class>
    <class name = "sensor device"       private = "1">sensor attached to UPS</class>
    <class name = "sensor list"         private = "1">list of sensor attached to UPSes</class>

    <class name = "fty-nut-server" state = "stable">fty nut actor</class>
    <class name = "fty-nut-command-server" state = "stable">fty nut command actor</class>
    <class name = "fty-nut-configurator-server" state = "stable">fty nut configurator actor</class>
    <class name = "alert actor" state = "stable">actor handling device alerts and thresholds</class>
    <class name = "sensor actor" state = "stable">actor handling sensors attached to UPS/ePDU</class>

    <class name = "state manager" private = "1">Class maintaining the asset list</class>
    <!-- StateManager unit test also tests AssetState -->
    <class name = "asset state" private = "1" selftest = "0">list of known assets</class>

    <main name = "fty-nut" service = "1" />
    <main name = "fty-nut-command" service = "1" />
    <main name = "fty-nut-configurator" service = "1" />
    <bin name = "fty-nutconfig" />
    <bin name = "fty-dmf" />

<!--
TODO: Handle (automate) delivery of .in templates (and configure.ac translation) for:
                 src/fty-nut.conf
                 src/fty_10_agent-nut
-->

</project>
